<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bao.mapper.OrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.bao.model.OrderDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_count" jdbcType="INTEGER" property="productCount" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="updated_at" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, product_id, product_count, is_delete, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bao.model.OrderDetail">
    insert into order_detail (id, order_id, product_id, 
      product_count, is_delete,
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{productCount,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT},
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bao.model.OrderDetail">
    insert into order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productCount != null">
        product_count,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productCount != null">
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bao.model.OrderDetail">
    update order_detail
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bao.model.OrderDetail">
    update order_detail
    set order_id = #{orderId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      product_count = #{productCount,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into
    order_detail(order_id,product_id,product_count)
    values
    <foreach collection="list" item="item" index="index"
             separator=",">
      (#{item.orderId},#{item.productId},#{item.productCount})
    </foreach>
  </insert>
</mapper>